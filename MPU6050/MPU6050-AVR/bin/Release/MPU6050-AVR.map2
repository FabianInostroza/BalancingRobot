00800138 b action.1876
0080013b b addr
000001cc T __bad_interrupt
00800143 B __bss_end
00800136 B __bss_start
00000090 t __c.2159
0000008c t __c.2161
0000018e T __ctors_end
0000018e T __ctors_start
00800136 D __data_end
000017a6 A __data_load_end
00001770 A __data_load_start
0080013a b data_ready
00800100 D __data_start
000001b4 T __do_clear_bss
000001bc t .do_clear_bss_loop
000001be t .do_clear_bss_start
0000019a T __do_copy_data
0000018e T __dtors_end
0000018e T __dtors_start
00800136 D _edata
00810000 B __eeprom_end
00800143 B _end
00001770 T _etext
0000176c W exit
0000176c T _exit
000015ee T fputc
00001412 T __ftoa_engine
00820000 D __fuse
00000000 W __heap_end
0000018e W __init
00000af0 T main
00000494 T mpu6050_burstRead
00000504 T mpu6050_burstReadWord
000005c4 T mpu6050_burstWrite
00000714 T mpu6050_burstWriteWord
00000326 T mpu6050_getGyroOffsets
00000654 T mpu6050_gyroCal
00000378 T mpu6050_readGyro
00000328 T mpu6050_readReg
00000772 T mpu6050_setAccelOffsets
0000061a T mpu6050_setGyroOffsets
00000456 T mpu6050_writeReg
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0000003b a __RAMPZ__
0080013f b read_reg
00800140 b reg
00800136 b reg_tmp.1877
0080013c b reg_w_val
0080013d b scan
0000080a T setupMPU6050
000008fc T setupTWI
000009de T setupUART0
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
00001652 T sprintf
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
00800139 b st.1875
00800137 b st2.1878
000040ff W __stack
0000176e t __stop_program
000015d8 T strnlen
000015c2 T strnlen_P
00800141 B test_asd
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
0000008c T __trampolines_end
0000008c T __trampolines_start
000009c2 T twi_read
00000990 T twi_send
00000918 T twi_start
00000968 T twi_stop
00000970 T twi_write
00000a26 T UART0_enRxInt
00000a3e T UART0_enTxInt
00000a7c T UART0_send_hex
00000aa0 T UART0_send_hex16
00000ad0 T UART0_send_hex32
00000a8c T UART0_send_hex8
00000a64 T UART0_sends
00000a56 T UART0_Tx
000016b0 T __ultoa_invert
000001cc W __vector_1
000001cc W __vector_10
000001cc W __vector_11
000001cc W __vector_12
000001cc W __vector_13
000001cc W __vector_14
000001cc W __vector_15
000001cc W __vector_16
000001cc W __vector_17
000001cc W __vector_18
000001cc W __vector_19
000001cc W __vector_2
000001ee T __vector_20
000001cc W __vector_21
000001cc W __vector_22
000001cc W __vector_23
000001cc W __vector_24
000001cc W __vector_25
000001cc W __vector_26
000001cc W __vector_27
000001cc W __vector_28
000001cc W __vector_29
000001d0 T __vector_3
000001cc W __vector_30
000001cc W __vector_31
000001cc W __vector_32
000001cc W __vector_33
000001cc W __vector_34
000001cc W __vector_4
000001cc W __vector_5
000001cc W __vector_6
000001cc W __vector_7
000001cc W __vector_8
000001cc W __vector_9
00000000 W __vector_default
00000000 T __vectors
00000cca T vfprintf
0080013e b write_reg
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
